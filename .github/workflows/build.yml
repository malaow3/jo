name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            os_name: linux
          - os: macos-latest
            os_name: mac
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y cmake
        elif [ "$RUNNER_OS" == "macOS" ]; then
          if ! command -v cmake &> /dev/null; then
            brew install cmake
          fi
        fi

    - name: Cache vcpkg
      uses: actions/cache@v4
      id: cache-vcpkg
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/packages
          !${{ github.workspace }}/vcpkg/downloads
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

    - name: Install vcpkg
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh

    - name: Integrate vcpkg
      run: ${{ github.workspace }}/vcpkg/vcpkg integrate install

    - name: Cache vcpkg packages
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/vcpkg/packages
          ${{ github.workspace }}/vcpkg/installed
        key: ${{ runner.os }}-vcpkg-packages-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-packages-

    - name: Cache build
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/build
        key: ${{ runner.os }}-cmake-build-${{ hashFiles('CMakeLists.txt', '**/*.cmake', '**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-cmake-build-

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: Rename binary
      run: mv ${{github.workspace}}/build/jo ${{github.workspace}}/build/jo_${{ matrix.os_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: jo_${{ matrix.os_name }}
        path: ${{github.workspace}}/build/jo_${{ matrix.os_name }}

  check_builds:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check build matrix status
      run: |
        if [[ "${{ needs.build.result }}" == "failure" ]]; then
          echo "At least one build failed!"
          exit 1
        else
          echo "All builds succeeded or were skipped!"
        fi
